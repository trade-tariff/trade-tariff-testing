openapi: '3.0.0'

info:
  title: Trade Tariff Public API
  description: |
    The Trade Tariff Public API provides a simple and consistent way to request
    [UK Trade Tariff
](https: //gov.uk/trade-tariff) content as structured data in a predictable format.

    This API accepts HTTP requests and responds with
    [JSON
](https: //en.wikipedia.org/wiki/JSON) data containing the same
    published content as is presented on GOV.UK.

  version: '2'

servers:
  - url: https: //www.trade-tariff.service.gov.uk/api/v2

paths:
  /sections:
    get:
      summary: Retrieves all sections
      description: |
        This resource represents _all sections_ in the Tariff.

        Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique record identifier.

      tags:
      - Sections
      responses: 200:
          description: Sections were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sections'
              example:
                $ref: '#/components/schemas/Sections/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/sections:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/sections

  /sections/{position
}:
    get:
      summary: Retrieves a section by its position
      description: |
        This resource represents _a single section_ in the Tariff.

        For this resource, `position` is used to uniquely identify a section and request it from the API.

        There are 21 sections in the Tariff, and their positions range from 1 to 21.

      tags:
      - Sections
      parameters:
        - name: 'position'
          in: path
          required: true
          description: |
            The `position` of the section to be retrieved
          schema:
            type: integer
            minimum: 1
            example: 1
      responses: 200:
          description: Section was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
              example:
                $ref: '#/components/schemas/Section/example'
        404:
          description: Section was not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/sections:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/sections/1

  /sections/{section_id
}/section_note:
    get:
      summary: Retrieves a section's notes
      description: |
        This resource represents the notes for a particular section.

        For this resource, `section_id` is used to uniquely identify a section and request its note from the API.
      tags:
      - Sections
      parameters:
        - name: section_id
          in: path
          required: true
          description: |
            The `section_id` of the section.
          schema:
            type: integer
            minimum: 1
            example: 1
      responses: 200:
          description: A section's notes were found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionNote'
              example:
                $ref: '#/components/schemas/SectionNote/example'
        404:
          description: A section's notes were not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/sections:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/sections/1/section_note

  /chapters:
    get:
      summary: Retrieves all chapters
      description: >
        This resource represents all chapters in the Tariff.

        Each chapter has a `goods_nomenclature_item_id`, which is a string of ten (10) digits.
      tags:
      - Chapters
      responses: 200:
          description: Chapters were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapters'
              example:
                $ref: '#/components/schemas/Chapters/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/chapters:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/chapters

  /chapters/{chapter_id
}:
    get:
      summary: Retrieves a chapter
      description: >
        Retrieves a chapter, given the first two (2) digits of its `goods_nomenclature_item_id`
        <p>This should be a zero-padded string of two digits.</p>
      tags:
      - Chapters
      parameters:
      - name: 'chapter_id'
        in: path
        required: true
        description: |
          The `chapter_id` of the chapter to be retrieved, e.g. the first two (2) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of two digits.
        schema:
          type: string
      responses: 200:
          description: A chapter was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
              example:
                $ref: '#/components/schemas/Chapter/example'
        404:
          description: Chapter was not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/chapters:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/chapters/34

  /chapters/{chapter_id
}/chapter_note:
    get:
      summary: Retrieves a chapter's notes
      description: >
        This resource represents the note for a particular chapter.
        For this resource, `chapter_id` is used to uniquely identify a chapter and request its note from the API. `chapter_id` is the first two (2) digits of the chapter's `goods_nomenclature_item_id`
        <p>`chapter_id` should be a zero-padded string of two digits.</p>
      tags:
      - Chapters
      parameters:
        - name: chapter_id
          in: path
          required: true
          description: |
            The `chapter_id` of the chapter.
          schema:
            type: integer
            minimum: 1
            example: 1
      responses: 200:
          description: A chapter's notes were found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterNote'
              example:
                $ref: '#/components/schemas/ChapterNote/example'
        404:
          description: A chapter's notes were not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/chapters/{chapter_id
}/chapter_note:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/chapters/34/chapter_note

  /headings/{heading_id
}:
    get:
      summary: Retrieves a heading
      description: >
        This resource represents a single heading.
        For this resource, `heading_id` is used to uniquely identify a heading and request it from the API. `heading_id` is the first four (4) digits of the heading's `goods_nomenclature_item_id`
        <p>`heading_id` should be a zero-padded string of four (4) digits.</p>
      tags:
      - Headings
      parameters:
      - name: 'heading_id'
        in: path
        required: true
        description: |
          The `heading_id` of the heading to be retrieved, e.g. the first four (4) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of four (4) digits.
        schema:
          type: string
          minimum: 4
          maximum: 4
          example: "0101"
      responses: 200:
          description: A heading was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Heading'
              example:
                $ref: '#/components/schemas/Heading/example'
        404:
          description: Heading was not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/chapters:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/headings/0101


  /commodities/{id
}:
    get:
      summary: Retrieves a commodity
      description: >
        This resource represents a single commodity.
        For this resource, `id` is a `goods_nomenclature_item_id` and it is used to uniquely identify a commodity and request it from the API.
        <p>`id` should be a string of ten (10) digits.</p>
      tags:
      - Commodities
      parameters:
      - name: 'id'
        in: path
        required: true
        description: |
          The `id` of the commodity to be retrieved. This should be a string of ten (10) digits.
        schema:
          type: string
          minimum: 10
          maximum: 10
          example: "0102291020"
      responses: 200:
          description: A commodity was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commodity'
              example:
                $ref: '#/components/schemas/Commodity/example'
        404:
          description: Commodity was not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/commodities/{id
}:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/commodities/0101210000

  /quotas/search:
    get:
      summary: Retrieves a list of quota definitions
      description: >
        Retrieves a paginated list of quota definitions, optionally filtered by a variety of parameters.
      tags:
      - Quotas
      parameters:
        - name: goods_nomenclature_item_id
          in: query
          required: false
          description: |
            Retrieve quotas only for goods with this `goods_nomenclature_item_id`
          schema:
            type: string
        - name: geographical_area_id
          in: query
          required: false
          description: |
            Retrieve quotas only with this `geographical_area_id`
          schema:
            type: string
        - name: order_number
          in: query
          required: false
          description: |
            Retrieve quotas only with this `order_number`
          schema:
            type: string
        - name: critical
          in: query
          required: false
          description: |
            Retrieve quotas only with `critical` status equal to ['Y', 'N'
]
          schema:
            type: string
            enum:
            - Y
            - N
        - name: status
          in: query
          required: false
          description: |
            Retrieve quotas only for goods with `status` equal to ['blocked', 'exhausted', 'not_blocked', 'not_exhausted'
]
          schema:
            type: string
            enum:
            - blocked
            - exhausted
            - not blocked
            - not exhausted
        - name: year
          in: query
          required: false
          description: |
            Retrieve quotas only for this specific `year`. Note: this, along with `month` and `day`, is part of a full date field, but the `year` part can be used on its own.
            ```
            /quotas/search?year=2019
            ```
            and via the body of a JSON request:
            ```
            {
  "year": "2019"
}
            ```
          schema:
            type: string
        - name: month
          in: query
          required: false
          description: |
            Retrieve quotas only for this specific `month`. Note: this, along with `year` and `day`, is part of a full date field, and will be ignored if the other two parameters are missing.
            ```
            /quotas/search?year=2019&month=01&day=01
            ```
            and via the body of a JSON request:
            ```
            {
  "year": "2019",
  "month": "01",
  "day": "01"
}
            ```
          schema:
            type: string
        - name: day
          in: query
          required: false
          description: |
            Retrieve quotas only for this specific `day`. Note: this, along with `year` and `month`, is part of a full date field, and will be ignored if the other two parameters are missing.
            ```
            /quotas/search?year=2019&month=01&day=01
            ```
            and via the body of a JSON request:
            ```
            {
  "year": "2019",
  "month": "01",
  "day": "01"
}
            ```
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: |
            Retrieve search page with number
          schema:
            type: integer

      responses: 200:
          description: Quota definitions were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaSearch'
              example:
                $ref: '#/components/schemas/QuotaSearch/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/quotas/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/quotas/search?goods_nomenclature_item_id=0805102200&geographical_area_id=EG&order_number=091784&status=not_blocked&page=1

  /additional_codes/search:
    get:
      summary: Retrieves a list of additional_codes, with associated measures and commodities.
      description: >
        Retrieves a paginated list of additional_codes, filtered by parameters.
      tags:
      - Additional Codes
      parameters:
        - name: code
          in: query
          required: false
          description: |
            Retrieve additional_codes with this exact `code`, or if additional_code's `code` begins with `code`.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |
            Retrieve additional_codes with this exact `type` equal to `additional_code_type_id`.
          schema:
            type: string
        - name: description
          in: query
          required: false
          description: |
            Retrieve additional_codes with description that contains `description`
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: |
            Retrieve search page with number
          schema:
            type: integer

      responses: 200:
          description: AdditionalCodes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalCodeSearch'
              example:
                $ref: '#/components/schemas/AdditionalCodeSearch/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/additional_codes/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/additional_codes/search?code=B005&type=B&page=1


  /additional_code_types:
    get:
      summary: Retrieves a list of additional_code_types.
      description: >
        Retrieves a list of all additional_code_types without pagination and filtering.
      tags:
        - Additional Code Types
      responses: 200:
          description: AdditionalCodeTypes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalCodeTypes'
              example:
                $ref: '#/components/schemas/AdditionalCodeTypes/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/additional_code_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/additional_code_types

  /certificates:
    get:
      summary: Retrieves the list of certificates, with associated description and type description.
      description: >
        Retrieves a paginated list of certificates, filtered by `as_of param, if present.
      tags:
      - Certificates
      parameters:
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve the measure_types as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date
      responses: 200:
          description: Certificates were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificates'
              example:
                $ref: '#/components/schemas/Certificates/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificates/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/certificates

  /certificates/search:
    get:
      summary: Retrieves a list of certificates, with associated measures and commodities.
      description: >
        Retrieves a paginated list of certificates, filtered by parameters.
      tags:
      - Certificates
      parameters:
        - name: code
          in: query
          required: false
          description: |
            Retrieve certificates with this exact `code` or the certificate's `code` begins with `code`.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |
            Retrieve certificates with this exact `type` equal to `certificate_type_code`.
          schema:
            type: string
        - name: description
          in: query
          required: false
          description: |
            Retrieve certificates with `description` that contains `description`.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: |
            Retrieve search page with number
          schema:
            type: integer

      responses: 200:
          description: Certificates were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateSearch'
              example:
                $ref: '#/components/schemas/CertificateSearch/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificates/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/certificates/search?code=D005&type=D&page=1

  /certificate_types:
    get:
      summary: Retrieves a list of certificate_types.
      description: >
        Retrieves a list of all certificate_types without pagination and filtering.
      tags:
        - Certificate Types
      responses: 200:
          description: CertificateTypes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateTypes'
              example:
                $ref: '#/components/schemas/CertificateTypes/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificate_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/certificate_types

  /measure_types:
    get:
      summary: Retrieves a list of measure types.
      description: >
        Retrieves a list of all measure_types.
      tags:
        - Certificate Types
      parameters:
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve the measure_types as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date

      responses: 200:
          description: MeasureTypes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureTypes'
              example:
                $ref: '#/components/schemas/MeasureTypes/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificate_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/measure_types

  /measure_actions:
    get:
      summary: Retrieves a list of the measure actions.
      tags:
        - Measure Actions
      parameters:
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve the measure_actions as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date

      responses: 200:
          description: MeasureActions were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureActions'
              example:
                $ref: '#/components/schemas/MeasureActions/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificate_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/measure_actions

  /measure_condition_codes:
    get:
      summary: Retrieves a list of the measure condition codes.
      tags:
        - Measure Condition Codes
      parameters:
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve the measure_condition_codes as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date

      responses: 200:
          description: measure_condition_codes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureConditionCodes'
              example:
                $ref: '#/components/schemas/MeasureConditionCodes/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/certificate_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/measure_condition_codes

  /footnotes/search:
    get:
      summary: Retrieves a list of footnotes, with associated measures and commodities.
      description: >
        Retrieves a paginated list of footnotes, filtered by parameters.
      tags:
      - Footnotes
      parameters:
        - name: code
          in: query
          required: false
          description: |
            Retrieve footnotes with this exact `code` or the footnote's `code` begins with `code`.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |
            Retrieve footnotes with this exact `type` equal to `footnote_type_id`.
          schema:
            type: string
        - name: description
          in: query
          required: false
          description: |
            Retrieve footnotes with `description` that contains `description`.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: |
            Retrieve search page with number
          schema:
            type: integer

      responses: 200:
          description: Footnotes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FootnoteSearch'
              example:
                $ref: '#/components/schemas/FootnoteSearch/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/footnotes/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/footnotes/search?code=134&type=CD&page=1

  /footnote_types:
    get:
      summary: Retrieves a list of footnote_types.
      description: >
        Retrieves a list of all footnote_types without pagination and filtering.
      tags:
        - Footnote Types
      responses: 200:
          description: FootnoteTypes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FootnoteTypes'
              example:
                $ref: '#/components/schemas/FootnoteTypes/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/footnote_types:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/footnote_types

  /chemicals/{cas
}:
    get:
      summary: Retrieves a chemical by its CAS number.
      description: |
        This resource represents _a single chemical_ in the Tariff.

        For this resource, `cas` is used to uniquely identify a chemical and request it from the API.

        For information about the CAS Registry and the CAS number system, see [https: //www.cas.org/support/documentation/chemical-substances](https://www.cas.org/support/documentation/chemical-substances)

      tags:
      - Chemicals
      parameters:
        - name: 'cas'
          in: path
          required: true
          description: |
            The CAS number of the chemical to be retrieved
          schema:
            type: string
            minimum: 1
            example: 22199-08-2
      responses: 200:
          description: Chemical was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chemical'
              example:
                $ref: '#/components/schemas/Chemical/example'
        404:
          description: Chemical was not found.
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/sections:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/chemicals/22199-08-2

  /chemicals/search:
    get:
      summary: Retrieves a list of chemicals, with associated commodities.
      description: >
        Retrieves a paginated list of chemicals, filtered by parameters.
      tags:
      - Chemicals
      parameters:
        - name: cas
          in: query
          required: false
          description: |
            Retrieve chemicals with this exact `cas` or the chemical's `cas` contains `cas`.
          schema:
            type: string
        - name: name
          in: query
          required: false
          description: |
            Retrieve chemicals with this exact `name` or the chemical's `name` contains `name`.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: |
            Retrieve search page with number
          schema:
            type: integer

      responses: 200:
          description: Chemicals were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChemicalSearch'
              example:
                $ref: '#/components/schemas/ChemicalSearch/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/chemicals/search:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/chemicals/search?name=benzene

  /goods_nomenclatures/section/{position
  }:
    get:
      summary: Retrieves a list of goods nomenclatures in a section
      description: |
        Retrieves a list of all the goods nomenclatures in a section allowing you to view the hierarchical tree for the section.

        The resource is returned as JSON by default.

        Alternately, the client may request that the resource be returned as comma separated values (CSV).

        In order to request CSV, the client should add the following HTTP header to the request:

        ```
        content-type:text/csv
        ```

        The response will contain some additional HTTP headers, i.e.:

        ```
        content-type: text/csv
        content-disposition: attachment; filename=goods_nomenclatures.csv
        ```

        Here is an example of a response as CSV:

        ```
        SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href
        27624,
  0101000000,
  0,
  "Live horses, asses, mules and hinnies",
  80,/api/v2/headings/0101
        93797,
  0101210000,
  1,Horses,
  10,/api/v2/commodities/0101210000
        93796,
  0101210000,
  2,Pure-bred breeding animals,
  80,/api/v2/commodities/0101210000
        93798,
  0101290000,
  2,Other,
  80,/api/v2/commodities/0101290000
        93799,
  0101291000,
  3,For slaughter,
  80,/api/v2/commodities/0101291000
        93800,
  0101299000,
  3,Other,
  80,/api/v2/commodities/0101299000
        93801,
  0101300000,
  1,Asses,
  80,/api/v2/commodities/0101300000
        72763,
  0101900000,
  1,Other,
  80,/api/v2/commodities/0101900000
        ```
      tags:
      - GoodsNomenclatures
      - text/csv
      parameters:
        - name: 'position'
          in: path
          required: true
          description: |
            The `position` of the section to be retrieved
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date
      responses: 200:
          description: Goods nomenclatures were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsNomenclatures'
              example:
                $ref: '#/components/schemas/GoodsNomenclatures/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/goods_nomenclatures/section/1:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/goods_nomenclatures/section/1

  /goods_nomenclatures/chapter/{chapter_id
  }:
    get:
      summary: Retrieves a list of goods nomenclatures in a chapter
      description: |
        Retrieves a list of all the goods nomenclatures in a chapter allowing you to view the hierarchical tree for the chapter.

        The resource is returned as JSON by default.

        Alternately, the client may request that the resource be returned as comma separated values (CSV).

        In order to request CSV, the client should add the following HTTP header to the request:

        ```
        content-type:text/csv
        ```

        The response will contain some additional HTTP headers, i.e.:

        ```
        content-type: text/csv
        content-disposition: attachment; filename=goods_nomenclatures.csv
        ```

        Here is an example of a response as CSV:

        ```
        SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href
        27624,
  0101000000,
  0,
  "Live horses, asses, mules and hinnies",
  80,/api/v2/headings/0101
        93797,
  0101210000,
  1,Horses,
  10,/api/v2/commodities/0101210000
        93796,
  0101210000,
  2,Pure-bred breeding animals,
  80,/api/v2/commodities/0101210000
        93798,
  0101290000,
  2,Other,
  80,/api/v2/commodities/0101290000
        93799,
  0101291000,
  3,For slaughter,
  80,/api/v2/commodities/0101291000
        93800,
  0101299000,
  3,Other,
  80,/api/v2/commodities/0101299000
        93801,
  0101300000,
  1,Asses,
  80,/api/v2/commodities/0101300000
        72763,
  0101900000,
  1,Other,
  80,/api/v2/commodities/0101900000
        ```
      tags:
      - GoodsNomenclatures
      - text/csv
      parameters:
        - name: 'chapter_id'
          in: path
          required: true
          description: |
            The `chapter_id` of the chapter to be retrieved, e.g. the first two (2) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of two digits.
          schema:
            type: string
            example: "01"
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date
      responses: 200:
          description: Goods nomenclatures were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsNomenclatures'
              example:
                $ref: '#/components/schemas/GoodsNomenclatures/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/goods_nomenclatures/chapter/01:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/goods_nomenclatures/chapter/01

  /goods_nomenclatures/heading/{heading_id
  }:
    get:
      summary: Retrieves a list of goods nomenclatures in a heading
      description: |
        Retrieves a list of all the goods nomenclatures in a heading allowing you to view the hierarchical tree for the heading.

        The resource is returned as JSON by default.

        Alternately, the client may request that the resource be returned as comma separated values (CSV).

        In order to request CSV, the client should add the following HTTP header to the request:

        ```
        content-type:text/csv
        ```

        The response will contain some additional HTTP headers, i.e.:

        ```
        content-type: text/csv
        content-disposition: attachment; filename=goods_nomenclatures.csv
        ```

        Here is an example of a response as CSV:

        ```
        SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href
        27624,
  0101000000,
  0,
  "Live horses, asses, mules and hinnies",
  80,/api/v2/headings/0101
        93797,
  0101210000,
  1,Horses,
  10,/api/v2/commodities/0101210000
        93796,
  0101210000,
  2,Pure-bred breeding animals,
  80,/api/v2/commodities/0101210000
        93798,
  0101290000,
  2,Other,
  80,/api/v2/commodities/0101290000
        93799,
  0101291000,
  3,For slaughter,
  80,/api/v2/commodities/0101291000
        93800,
  0101299000,
  3,Other,
  80,/api/v2/commodities/0101299000
        93801,
  0101300000,
  1,Asses,
  80,/api/v2/commodities/0101300000
        72763,
  0101900000,
  1,Other,
  80,/api/v2/commodities/0101900000
        ```
      tags:
      - GoodsNomenclatures
      - text/csv
      parameters:
        - name: 'heading_id'
          in: path
          required: true
          description: |
            The `heading_id` of the heading to be retrieved, e.g. the first four (4) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of four (4) digits.
          schema:
            type: string
            minimum: 4
            maximum: 4
            example: "0101"
        - name: as_of
          in: query
          required: false
          description: |
            Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even
            if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.
          schema:
            type: string
            format: date
      responses: 200:
          description: Goods nomenclatures were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsNomenclatures'
              example:
                $ref: '#/components/schemas/GoodsNomenclatures/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/goods_nomenclatures/heading/0101:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/goods_nomenclatures/heading/0101

  /search_references:
    get:
      summary: Retrieves a list of search references by letter
      description: |
        Retrieves a list of search references by letter
      tags:
      - SearchReferences
      parameters:
        - name: query[letter
  ]
          in: query
          required: true
          description: |
            Retrieve search references started with  `query[letter
  ]` letter.
          schema:
            type: string
      responses: 200:
          description: Search references were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchReferences'
              example:
                $ref: '#/components/schemas/SearchReferences/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/search_references.json?query[letter
  ]=c:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/search_references.json?query[letter]=c

  /geographical_areas:
    get:
      summary: Retrieves a list of geographical areas
      description: |
        Retrieves a list of geographical areas
      tags:
      - GeographicalAreas
      responses: 200:
          description: Geographical areas were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeographicalAreas'
              example:
                $ref: '#/components/schemas/GeographicalAreas/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/geographical_areas:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/geographical_areas

  /geographical_areas/countries:
    get:
      summary: Retrieves a list of contries
      description: |
        Retrieves a list of contries
      tags:
      - GeographicalAreas
      responses: 200:
          description: Contries were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeographicalAreas'
              example:
                $ref: '#/components/schemas/GeographicalAreas/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/geographical_areas:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/geographical_areas/countries
  /changes/{as_of
  }:
    get:
      summary: Retrieves a list of goods nomenclature objects that have changed since the previous day
      description: |
        Retrieves a list of goods nomenclature objects that have changed since the previous day

        Changes only go back 30 days
      tags:
      - Changes
      parameters:
        - name: 'as_of'
          in: path
          required: true
          description: |
            Retrieve changes as they existed between the `as_of` date and the previous day.
          schema:
            type: string
            format: date
      responses: 200:
          description: The date is correct and a (potentially empty) list of changes will be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
              example:
                $ref: '#/components/schemas/Change/example'
        5XX:
          description: Unexpected error.
      x-code-samples:
        /api/v2/changes:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/changes/2021-01-01
  /rules_of_origin_schemes/{subheading
  }/{country_code
  }:
    get:
      summary: Retrieves relevant Rules of Origin schemes and rules
      description: |
        Retrieves a list of Schemes and corresponding rules which apply to the
        supplied heading and country codes
      tags:
      - Rules of Origin
      parameters:
        - name: subheading
          in: path
          required: true
          description: The 6 digit subheading of the goods being traded
          schema:
            type: string
            minimum: 6
            maximum: 6
            example: "392113"
        - name: 'country_code'
          in: path
          required: true
          description: Two letter country code for the country you are trading with
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: "FR"
      responses: 200:
          description:
            An array of Schemes, with the relevant rules and other data nested under the scheme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesOfOriginScheme'
              example:
                $ref: '#/components/schemas/RulesOfOriginScheme/example'
        5XX:
          description: Unexpected error - likely missing or incorrect params
      x-code-samples:
        /api/v2/rules_of_origin:
          lang: shell
          source: |-
            curl -X GET https: //www.trade-tariff.service.gov.uk/api/v2/rules_of_origin_schemes/392113/FR

components:
  schemas:

    Sections:
      description: |
        The response will be a JSONCollection, and will contain an array of [referenced section objects
  ](/reference.html#referencedsection "see referenced section object"), which are abbreviated versions of a full [section
  ](/reference.html#section "see section object") object.

        Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique identifier.
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the section. It may be used to uniquely identify a section and request it's section_note from the API.
        data:type:
          type: string
          description: the type of object this is, e.g. `section`
        data:attributes:
          type: array
          description: A collection of [referenced section objects
  ](/reference.html#referencedsection "see referenced section object")
          items:
            $ref: '#/components/schemas/ReferencedSection'
      example:
        data:
        - id: 1
          type: section
          attributes:
            position: 1
            title: Live animals; animal products
            numeral: I
            chapter_from: '01'
            chapter_to: '05'
        - id: 2
          type: section
          attributes:
            position: 2
            title: Vegetable products
            numeral: II
            chapter_from: '06'
            chapter_to: '14'
        # - $ref: '#/components/schemas/ReferencedSection/example'

    Section:
      description: |
        A section of the Tariff.

        Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique record identifier.

      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the section. It may be used to uniquely identify a section and request it's section_note from the API.
        data:type:
          type: string
          description: The type of object this is, e.g. `section`
        data:attributes:
          description: The section's attributes, as a [referenced section object
  ](/reference.html#referencedsection "see referenced section object")
          $ref: '#/components/schemas/ReferencedSection'
        data:relationships:
          type: object
          description: Objects and collections that are related to this section, e.g., a [referenced chapter
  ](/reference.html#referencedchapter "see referenced chapter object")
        included:
          type: array
          description: A collection of chapters that are included in the section [referenced chapter objects
  ](/reference.html#referencedchapter "see referenced chapter object")
          items:
            $ref: '#/components/schemas/ReferencedChapter'

      example:
        data:
          id: "1"
          type: section
          attributes:
            id: 1
            numeral: I
            title: Live animals; animal products
            position: 1
            chapter_from: '01'
            chapter_to: '05'
            section_note: "* 1\\. Any reference in this section to a particular
              genus or species of an animal, except where the context otherwise
              requires, includes a reference to the young of that genus or species.\r\n*
              2\\. Except where the context otherwise requires, throughout the nomenclature
              any reference to 'dried' products also covers products which have
              been dehydrated, evaporated or freeze-dried.\r\n"
          relationships:
            chapters:
              data:
              - id: "27623"
                type: chapter
              - id: "27809"
                type: chapter
        included:
        - id: "27623"
          type: "chapter"
          attributes:
            goods_nomenclature_sid: 27623
            goods_nomenclature_item_id: 0100000000
            headings_from: 0101
            headings_to: 0106
            description: LIVE ANIMALS
            formatted_description: Live animals
          relationships:
            guides:
              data:
              - id: "23"
                type: guide
        - id: "27809"
          type: "chapter"
          attributes:
            goods_nomenclature_sid: 27809
            goods_nomenclature_item_id: 0200000000
            headings_from: 0101
            headings_to: 0106
            description: MEAT AND EDIBLE MEAT OFFAL
            formatted_description: Meat and edible meat offal
          relationships:
            guides:
              data:
              - id: "23"
                type: guide
        - id: "23"
          type: guide
          attributes:
            title: "Classification of goods"
            url: "https://www.gov.uk/government/collections/classification-of-goods"

    SectionNote:
      description: |
        A note associated with a section of the Tariff.

        A note provides textual about the section. Not all sections have a section note.

      type: object
      properties:
        id:
          type: integer
          description: The `id` of the section_note.
        section_id:
          type: integer
          description: The `section_id` of the sction_note. It may be used to uniquely identify a section_note and request it from the API.
        content:
          type: string
          description: The `content` of the section_note. Not all sections have a note.
      required:
      - id
      example:
        id: 1
        section_id: 1
        content: "* 1\\. Any reference in this section to a particular genus
          or species of an animal, except where the context otherwise requires,
          includes a reference to the young of that genus or species.\r\n* 2\\.
          Except where the context otherwise requires, throughout the nomenclature
          any reference to 'dried' products also covers products which have
          been dehydrated, evaporated or freeze-dried.\r\n"

    Chapters:
      description: |
        An array of objects, which contain a reference to a full [chapter
  ](/reference.html#chapter "see chapter object") object.

        Each chapter has a `goods_nomenclature_item_id`, which is a unique identifier.

      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the chapter. This is a unique identifier.
        data:type:
          type: string
          description: The type of object this is, e.g. `chapter`.
        data:attributes:
          type: array
          description: A collection of [referenced chapter objects
  ](/reference.html#referencedchapter "see referenced chapter object")
          items:
            $ref: '#/components/schemas/ReferencedChapter'
      example:
        data:
        - id: "27623"
          type: chapter
          attributes:
            goods_nomenclature_sid: '27623'
            goods_nomenclature_item_id: '0100000000'
        - id: "27809"
          type: chapter
          attributes:
            goods_nomenclature_sid: '27809'
            goods_nomenclature_item_id: '0200000000'
        - id: "28373"
          type: chapter
          attributes:
            goods_nomenclature_sid: '28373'
            goods_nomenclature_item_id: '0300000000'

    Chapter:
      description: |
        A chapter in the Tariff.

        Each chapter has a `goods_nomenclature_sid`, which is a unique identifier. Each chapter has a `goods_nomenclature_item_id`, which is a unique identifier.

      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the chapter. It may be used to uniquely identify a chapter and request it's chapter_note from the API.
        data:type:
          type: string
          description: the type of object this is, e.g. `chapter`
        data:attributes:
          description: The chapter's attributes, as a [referenced chapter object
  ](/reference.html#referencedchapter "see referenced chapter object")
          $ref: '#/components/schemas/ReferencedChapter'
        data:relationships:
          type: object
          description: Zero, one or many [referenced section objects
  ](/reference.html#referencedsection "see referenced section object"),
  [referenced heading objects
  ](/reference.html#referencedheading "see referenced heading object") and [referenced guide objects
  ](/reference.html#referencedguide "see referenced guide object") that are related to this chapter. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced headings
  ](/reference.html#referencedheading "see referenced heading object") and [referenced guides
  ](/reference.html#referencedguide "see referenced guide object") child objects that are included in the chapter.
          items:
            type: object
      required:
      - id
      example:
        data:
          id: "27623"
          type: chapter
          attributes:
            goods_nomenclature_sid: 27623
            goods_nomenclature_item_id: '0100000000'
            description: LIVE ANIMALS
            formatted_description: Live animals
            chapter_note_id: 46
            chapter_note: "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508."
            section_id: 1
          relationships:
            section:
              data:
              - id: "1"
                type: section
            guide:
              data:
              - id: "23"
                type: guide
            headings:
              data:
              - id: "27624"
                type: heading
              - id: "27633"
                type: heading
        included:
        - id: 23
          type: guide
          attributes:
            title: Classification of goods
            url: https: //www.gov.uk/government/collections/classification-of-goods
        - id: 27624
          type: heading
          attributes:
              goods_nomenclature_sid: 27624
              goods_nomenclature_item_id: "0101000000"
              declarable: false
              description: "Live horses, asses, mules and hinnies"
              producline_suffix: "80"
              leaf: true
              description_plain: "Live horses, asses, mules and hinnies"
              formatted_description: "Live horses, asses, mules and hinnies"
        - id: 27633
          type: heading
          attributes:
              goods_nomenclature_sid: 27633
              goods_nomenclature_item_id: "0102000000"
              declarable: false
              description: "Live bovine animals"
              producline_suffix: "80"
              leaf: true
              description_plain: "Live bovine animals"
              formatted_description: "Live bovine animals"

    ChapterNote:
      description: |
        A note associated with a chapter of the Tariff.

        Not all chapters have a chapter note.
      type: object
      properties:
        id:
          type: integer
          description: The `id` of the chapter_note. This is a unique identifier.
        chapter_id:
          type: string
          description: The `chapter_id` of the chapter_note.
        section_id:
          type: integer
          description: The `section_id` of this chapter that has this note.
        content:
          type: string
          description: The `content` of the chapter_note.
      required:
      - id
      example:
        id: 46
        section_id: 1
        chapter_id: '01'
        content: "* 1\\. This chapter covers all live animals except:\r\n  *
          (a) fish and crustaceans, molluscs and other aquatic invertebrates,
          of heading 0301,
  0306,
  0307 or 0308;\r\n  * (b) cultures of micro-organisms
          and other products of heading 3002; and\r\n  * (c) animals of heading
          9508."

    Heading:
      description: |
        A heading in the tariff.

        A heading (or sub-heading) describes products more detail than do headings or sections.
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the heading. It may be used to uniquely identify a heading and request it's heading_note from the API.
        data:type:
          type: string
          description: the type of object this is, e.g. `heading`
        data:attributes:
          description: The heading's attributes, as a [referenced heading object
  ](/reference.html#referencedheading "see referenced heading object")
          $ref: '#/components/schemas/ReferencedHeading'
        data:relationships:
          type: object
          description: |
            Zero, one or many [referenced section objects
  ](/reference.html#referencedsection "see referenced section object"),
  [chapter
  ](/reference.html#referencedchapter "see referenced chapter object")
            or [referenced footnote objects
  ](/reference.html#referencedfootnote "see referenced footnote object") that are related to this heading.
            May include parent objects.
        included:
          type: array
          description: |
            Zero, one or many [referenced chapter
  ](/reference.html#referencedchapter "see referenced chapter object") objects,
  [referenced guide
  ](/reference.html#referencedguide "see referenced guide object") objects,
            or [referenced commodity
  ](/reference.html#referencedheadingcommodity "see referenced heading commodity object") objects.
          items:
            type: object
      example:
        data:
          id: "27810"
          type: heading
          attributes:
            goods_nomenclature_item_id: '0101000000'
            description: Live horses, asses, mules and hinnies
            bit_url: http: //ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0201000000&Expand=true
            formatted_description: "Live horses, asses, mules and hinnies"
          relationships:
            footnotes:
              data:
              - id: "701"
                type: footnote
            section:
              data:
                id: "1"
                type: section
            chapter:
              data:
                id: "27809"
                type: chapter
            commodities:
              data:
              - id: "27811"
                type: commodity
              - id: "104276"
                type: commodity
              - id: "104254"
                type: commodity
        included:
        - id: "27809"
          type: chapter
          attributes:
            goods_nomenclature_item_id: "0200000000"
            description: "MEAT AND EDIBLE MEAT OFFAL"
            formatted_description: "Meat and edible meat offal"
            chapter_note: "* 1\\.This chapter does not cover:\r\n  * (a) products of the kinds described in headings 0201 to 0208 or 0210, unfit or unsuitable for human consumption; ... "
          relationships:
            guides:
              data:
              - id: "23"
                type: guide
        - id: "23"
          type: guide
          attributes:
            title: Classification of goods
            url: https: //www.gov.uk/government/collections/classification-of-goods
        - id: "27811"
          type: commodity
          attributes:
            description: "Carcases and half-carcases"
            number_indents: 1
            goods_nomenclature_item_id: "0201100000"
            leaf: false
            goods_nomenclature_sid: 27811,
            formatted_description: "Carcases and half-carcases"
            description_plain: "Carcases and half-carcases"
            producline_suffix: "80"
            parent_sid: null
          relationships:
            overview_measures:
              data:
              - id: "2982599"
                type: measure
        - id: "2982599"
          type: measure
          attributes:
            id: 2982599
            vat: false
          relationships:
            duty_expression:
              data:
                id: "2982599-duty_expression"
                type: duty_expression
            measure_type:
              data:
                id: "109"
                type: measure_type
        - id: "2982599-duty_expression"
          type: duty_expression
          attributes:
            base: "p/st"
            formatted_base: "\u003cabbr title='Number of items'\u003ep/st\u003c/abbr\u003e"
        - id: "109"
          type: measure_type
          attributes:
            description: "Supplementary unit"
            national: null
            measure_type_series_id: null
            id: "109"
        - id: "701"
          type: footnote
          attributes:
            code: "TN701"
            description: "According to  the Council Regulation (EU) No 692/2014sons, entity or body..."
            formatted_description: "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be..."
        - id: "1"
          type: section
          attributes:
            numeral: "I"
            title: "Live animals; animal products"
            position: 1
            section_note: "* 1\\. Any reference in this section to a particular genus or species of an animal..."

    Commodity:
      description: |
        Commodities are headings or subheadings.

        A commodity has a specific code (the `goods_nomenclature_item_id`), which is unique.
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the commodity. It may be used to uniquely identify a commodity.
        data:type:
          type: string
          description: the type of object this is, e.g. `commodity`
        data:attributes:
          description: The commodity's attributes, as a [referenced commodity object
  ](/reference.html#referencedcommodity "see referenced commodity object")
          $ref: '#/components/schemas/ReferencedCommodity'
        data:relationships:
          type: object
          description: Zero, one or many [referenced section
  ](/reference.html#referencedsection "see referenced section object") objects,
  [referenced chapter
  ](/reference.html#referencedchapter "see referenced chapter object") objects,
  [referenced heading
  ](/reference.html#referencedheading "see referenced heading object") objects,
  [referenced measure
  ](/reference.html#referencedmeasure "see referenced measure object") objects, and [referenced footnote
  ](/reference.html#referencedfootnote "see referenced footnote object") objects that are related to this heading. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced commodity objects
  ](/reference.html#referencedcommodity "see referenced commodity object"),
  [referenced chapter objects
  ](/reference.html#referencedchapter "see referenced chapter object"),
  [referenced guide objects
  ](/reference.html#referencedguide "see referenced guide object"),
  [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object"),
  [referenced geographical area objects objects
  ](/reference.html#referencedgeographicalarea "see referenced geographical area object").
          items:
            type: object
            # $ref: '#/components/schemas/ReferencedCommodity'
      example:
        data:
          id: "27777"
          type: commodity
          attributes:
            producline_suffix: "80"
            description: "Lambs (up to a year old)"
            number_indents: 3
            goods_nomenclature_item_id: "0104103000"
            bti_url: "http://ec.europa.eu/taxation_customs/dds2/ebti/bti_consultation.jsp?Lang=en&nomenc=0104103000&Expand=true"
            formatted_description: "Lambs (up to a year old)"
            description_plain: "Lambs (up to a year old)"
            consigned: false
            consigned_from: null
            basic_duty_rate: "<span title='80.5 EUR'>80.50</span> EUR / <abbr title='Hectokilogram'>100 kg</abbr>"
            meursing_code: false
            declarable: true
          relationships:
            footnotes:
              data:
              - id: "701"
                type: footnote
            section:
              data:
                id: "1"
                type: section
            chapter:
              data:
                id: "27623"
                type: chapter
            heading:
              data:
                id: "27773"
                type: heading
            ancestors:
              data:
              - id: "27774"
                type: commodity
              - id: "27776"
                type: commodity
            import_measures:
              data:
              - id: "-480792"
                type: measure
              - id: "3619955"
                type: measure
              - id: "3563227"
                type: measure
              - id: "2046830"
                type: measure
            export_measures:
              data:
              - id: "3540076"
                type: measure
              - id: "2982602"
                type: measure
        included:
        - id: "27774"
          type: commodity
          attributes:
            producline_suffix: "80"
            description: "Sheep"
            number_indents: 1
            goods_nomenclature_item_id: "0104100000"
            formatted_description: "Sheep"
            description_plain: "Sheep"
        - id: "701"
          type: footnote
          attributes:
            code: "TR037"
            description: "Guillotine blades"
            formatted_description: "Guillotine blades"
        - id: "1"
          type: section
          attributes:
            numeral: "I"
            title: "Live animals; animal products"
            position: "1"
        - id: "27773"
          type: heading
          attributes:
            goods_nomenclature_item_id: "9950000000"
            description: "Code used only in trading of... is less than €|200"
            formatted_description: "Code used only in trading of... is less than €&nbsp;200"
            description_plain: "Code used only in trading of... is less than € 200"
        - id: "27623"
          type: chapter
          attributes:
            goods_nomenclature_item_id: "0100000000"
            description: "LIVE ANIMALS"
            formatted_description: "Live animals"
            chapter_note: "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508."
          relationships:
            guides:
              data:
              - id: "23"
                type: guide
        - id: "3540076"
          type: measure
          attributes:
            id: 3540076
            origin: "eu"
            effective_start_date: "2017-02-04T00:00:00.000Z"
            effective_end_date: null
            import: false
            excise: false
            vat: false
            reduction_indicator: null
          relationships:
            duty_expression:
              data:
                id: "3540076-duty_expression"
                type: duty_expression
            measure_type:
              data:
                id: "715"
                type: measure_type
            legal_acts:
              data:
              - id: "R1701600"
                type: legal_act
              - id: "R9703380"
                type: legal_act
            measure_conditions:
              data:
              - id: "1134192"
                type: measure_condition
              - id: "1134193"
                type: measure_condition
              - id: "1134194"
                type: measure_condition
            measure_components:
              data:
              - id: "3540076-01"
                type: measure_component
              - id: "3540076-02"
                type: measure_component
            national_measurement_units:
              data:
            geographical_area:
              data:
                id: "1008"
                type: geographical_area
            excluded_countries:
              data:
            footnotes:
              data:
                id: "CD371"
                type: footnote
            order_number:
              data: null
        - id: "1134192"
          type: measure_condition
          attributes:
            id: "1134192"
            condition_code: "Y"
            condition: "Y: Other conditions"
            document_code: "N853"
            requirement: "UN/EDIFACT certificates: Common Veterinary Entry Document (CVED) in accordance with Regulation (EC) No 136/2004, used for veterinary check on products"
            action: "Import/export allowed after control"
            duty_expression: ""
        - id: "3540076-01"
          type: measure_component
          attributes:
            id: "3540076-01"
            duty_expression_id: "01"
            duty_amount: 20.2
            monetary_unit_code: "EUR"
            monetary_unit_abbreviation: null
            measurement_unit_code: "DTN"
            duty_expression_description: "+ % or amount"
            duty_expression_abbreviation: "+"
        - id: ""
          type: duty_expression
          attributes:

    QuotaSearch:
      description: |
        Search for quota definitions with a variety of parameters
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the definition. It may be used to uniquely identify a definition.
        data:type:
          type: string
          description: the type of object this is, e.g. `definition`
        data:attributes:
          description: The definition's attributes, as a [referenced definition object
  ](/reference.html#referenceddefinition "see referenced definition object")
          $ref: '#/components/schemas/ReferencedDefinition'
        data:relationships:
          type: object
          description: Zero, one or many [referenced section objects
  ](/reference.html#referencedsection "see referenced section object"),
  [referenced chapter objects
  ](/reference.html#referencedchapter "see referenced chapter object"), and [referenced footnote objects
  ](/reference.html#referencedheading "see referenced footnote object") that are related to this heading. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced commodity objects
  ](/reference.html#referencedcommodity "see referenced commodity object"),
  [referenced chapter objects
  ](/reference.html#referencedchapter "see referenced chapter object"),
  [referenced guide objects
  ](/reference.html#referencedguide "see referenced guide object"),
  [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object"),
  [referenced geographical area objects objects
  ](/reference.html#referencedgeographicalarea "see referenced geographical area object").
          items:
            # $ref: '#/components/schemas/ReferencedCommodity'
            type: object
        meta:pagination:
          type: object
          description: Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
          items:
            type: integer
      example:
        data:
        - id: "12202"
          type: definition
          attributes:
            quota_definition_sid: 12202
            quota_order_number_id: "091784"
            initial_volume: "36300000.0"
            validity_start_date: "2018-12-01T00:00:00.000Z"
            validity_end_date: "2019-05-31T00:00:00.000Z"
            status: "Open"
            description: "Commission Regulation (EU) No 449/2010 amending Council Regulation (EC) No 747/2001 and repealing Regulations (EC) No 2276/2003 (EC) No 995/2005 (EC) No 1002/2007 and (EC) No 1455/2007"
            balance: "36300000.0"
            measurement_unit: "Kilogram (kg)"
            monetary_unit: null
            measurement_unit_qualifier: null
            last_allocation_date: null
            suspension_period_start_date: null
            suspension_period_end_date: null
            blocking_period_start_date: null
            blocking_period_end_date: null
          relationships:
            order_number:
              data:
                id: "091784"
                type: order_number
            measures:
              data:
              - id: "3659283"
                type: measure
              - id: "3659284"
                type: measure
              - id: "3659285"
                type: measure
        included:
        - id: "3659283"
          type: measure
          attributes:
            goods_nomenclature_item_id: "0805102200"
          relationships:
            geographical_area:
              data:
                id: EG
                type: geographical_area
        - id: "3659284"
          type: measure
          attributes:
            goods_nomenclature_item_id: "0805102400"
          relationships:
            geographical_area:
              data:
                id: EG
                type: geographical_area
        - id: "3659285"
          type: measure
          attributes:
            goods_nomenclature_item_id: "0805102800"
          relationships:
            geographical_area:
              data:
                id: EG
                type: geographical_area
        - id: "091784"
          type: order_number
          attributes:
            number: "091784"
          relationships:
            geographical_area:
              data:
                id: EG
                type: geographical_area
        - id: EG
          type: geographical_area
          attributes:
            id: EG
            description: Egypt
            geographical_area_id: EG
        meta:
          pagination:
            page: 1
            per_page: 5
            total_count: 1

    AdditionalCodeSearch:
      description: |
        Search for additional_codes with parameters
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the additional_code. It may be used to uniquely identify an additional_code. For additional_codes, this value is `attributes:code`.
        data:type:
          type: string
          description: the type of object this is, e.g. `additional_code`
        data:attributes:
          description: The additional_code's attributes, as a [referenced additional_code object
  ](/reference.html#referencedadditional_code "see referenced additional_code object")
          $ref: '#/components/schemas/ReferencedAdditionalCode'
        data:relationships:
          type: object
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this additional_code. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this additional_code. May include parent objects.
          items:
            type: object
        meta:pagination:
          type: object
          description: Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
          items:
            type: integer
      example:
        data:
        - id: "11486"
          type: additional_code
          attributes:
            additional_code_type_id: "B"
            additional_code: "067"
            code: "B067"
            description: "SHANGHAI HANHUA PLASTIC PACKAGE PRODUCT CO., LTD, Shanghai"
            formatted_description: "SHANGHAI HANHUA PLASTIC PACKAGE PRODUCT CO., LTD, Shanghai"
          relationships:
            measures:
              data:
              - id: "3625236"
                type: measure
        included:
        - id: "3625236"
          type: measure
          attributes:
            id: 3625236
            validity_start_date: "1991-07-01T00:00:00.000Z"
            validity_end_date: "1992-03-31T00:00:00.000Z"
            goods_nomenclature_item_id: "7317000000"
          relationships:
            goods_nomenclature:
              data:
                id: "46392"
                type: goods_nomenclature
        - id: "46392"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "7317000000"
            goods_nomenclature_sid: 46392
            number_indents: 0
            description: "Nails, tacks, drawing pins, corrugated nails, staples ..."
            productline_suffix: "80"
        meta:
          pagination:
            page: 1
            per_page: 5
            total_count: 1

    AdditionalCodeTypes:
      description: |
        List of additional_code_types
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the additional_code_type. It may be used to uniquely identify an additional_code_type.
        data:type:
          type: string
          description: the type of object this is, e.g. `additional_code_type`
        data:attributes:
          description: The additional_code_type's attributes, as a [referenced additional_code_type object
  ](/reference.html#referencedadditional_code_type "see referenced additional_code_type object")
          $ref: '#/components/schemas/ReferencedAdditionalCodeType'
      example:
        data:
        - id: "B"
          type: additional_code_type
          attributes:
            additional_code_type_id: "B"
            description: "Anti-dumping/countervailing"
        - id: "P"
          type: additional_code_type
          attributes:
            additional_code_type_id: "B"
            description: "Refund for basic products"

    Certificates:
      description: List of the certificates
      type: object
      properties:
        data:id:
          type: string
          description: The unique `id` of the certificate. This value is equal to `attributes:certificate_type_code + attributes:certificate_code`.
        data:type:
          type: string
          description: the type of object this is, e.g. `certificate`
        data:attributes:
          description: The certificate's attributes, as a [referenced certificate object
  ](/reference.html#referencedcertificate "see referenced certificate object")
          $ref: '#/components/schemas/ReferencedCertificate'
      example:
        data:
          id: "D005"
          type: certificate
          attributes:
            certificate_type_code: "D"
            certificate_code: "005"
            description: "Commercial invoice within the framework of undertakings"
            formatted_description: "Commercial invoice within the framework of undertakings"
          relationships:
            measures:
              data:
              - id: "2124342"
                type: measure
              - id: "2250100"
                type: measure

    CertificateSearch:
      description: |
        Search for certificates with parameters
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the certificate. It may be used to uniquely identify a certificate. For certificates, this value is `attributes:certificate_type_code + attributes:certificate_code`.
        data:type:
          type: string
          description: the type of object this is, e.g. `certificate`
        data:attributes:
          description: The certificate's attributes, as a [referenced certificate object
  ](/reference.html#referencedcertificate "see referenced certificate object")
          $ref: '#/components/schemas/ReferencedCertificate'
        data:relationships:
          type: object
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this certificate. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this certificate. May include parent objects.
          items:
            type: object
        meta:pagination:
          type: object
          description: Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
          items:
            type: integer
      example:
        data:
          id: "D005"
          type: certificate
          attributes:
            certificate_type_code: "D"
            certificate_code: "005"
            description: "Commercial invoice within the framework of undertakings"
            formatted_description: "Commercial invoice within the framework of undertakings"
          relationships:
            measures:
              data:
              - id: "2124342"
                type: measure
              - id: "2250100"
                type: measure
        included:
        - id: "2124342"
          type: measure
          attributes:
            id: 2124342
            validity_start_date: "2010-01-01T00:00:00.000Z"
            validity_end_date: null
            goods_nomenclature_item_id: "7307191010"
          relationships:
            goods_nomenclature:
              data:
                id: "71692"
                type: goods_nomenclature
        - id: "71692"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "7307191010"
            goods_nomenclature_sid: 71692
            number_indents: 4
            description: "Threaded malleable cast iron tube or pipe fittings"
            productline_suffix: "80"
        meta:
          pagination:
            page: 1
            per_page: 5
            total_count: 1

    CertificateTypes:
      description: |
        List of certificate_types
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the certificate_type. It may be used to uniquely identify an certificate_type.
        data:type:
          type: string
          description: the type of object this is, e.g. `certificate_type`
        data:attributes:
          description: The certificate_type's attributes, as a [referenced certificate_type object
  ](/reference.html#referencedcertificate_type "see referenced certificate_type object")
          $ref: '#/components/schemas/ReferencedCertificateType'
      example:
        data:
        - id: "Z"
          type: certificate_type
          attributes:
            certificate_type_code: "Z"
            description: "More certificates"
        - id: "X"
          type: certificate_type
          attributes:
            certificate_type_code: "X"
            description: "Export licence"

    MeasureTypes:
      description: |
        List of measure type
      type: object
      properties:
        data:id:
          type: string
          description: The unique `id` of the measure_type.
        data:type:
          type: string
          description: the type of object this is, e.g. `measure_type`
        data:attributes:
          description: The measure_type's attributes, as a [referenced measure_type object
  ](/reference.html#referencedmeasuretype "see referenced measure_type object")
          $ref: '#/components/schemas/ReferencedMeasureType'
      example:
        data:
          - id: "1"
            type: measure_type
            attributes:
              description: "Supplementary unit import"
              measure_type_series_description: "Supplementary unit"
              validity_end_date: null
              validity_start_date: "1972-01-01T00:00:00.000Z"
              measure_type_series_id: "O"
              measure_component_applicable_code: 1
              order_number_capture_code: 2
              trade_movement_code: 0

    ReferencedMeasureType:
      description: A measure_type object referenced elsewhere.
      type: object
      properties:
        description:
          type: string
          description: The description for the measure type.
        measure_type_series_description:
          type: string
          description: The description of the measure type series.
        validity_start_date:
          type: string
          description: The validity start date of the measure type.
          format: date-time
        validity_end_date:
          type: string
          description: The validity end date of the measure type.
          format: date-time
        measure_type_series_id:
          type: string
          description: A single char representing measure type series.
          format: byte
        measure_component_applicable_code:
          type: integer
          description: The applicable code of the measure.
        order_number_capture_code:
          type: integer
          description: The order number of capture code.
        trade_movement_code:
          type: integer
          description: The code of trade movement.
      example:
        description: "Supplementary unit import"
        measure_type_series_id: "O"
        measure_component_applicable_code: 1
        order_number_capture_code: 2
        trade_movement_code: 0
        validity_end_date: null
        validity_start_date: "1972-01-01T00:00:00.000Z"
        id: "110"
        measure_type_series_description: "Supplementary unit"

    MeasureActions:
      description: List of measure actions
      type: object
      properties:
        data:id:
          type: string
          description: The unique `id` of the measure_action.
        data:type:
          type: string
          description: the type of object (`measure_action`)
        data:attributes:
          description: The measure_action's attributes, as a [referenced measure_action object
  ](/reference.html#referencedmeasureaction "see referenced measure_action object")
          $ref: '#/components/schemas/ReferencedMeasureAction'
      example:
        data:
          - id: "1"
            type: measure_action
            attributes:
              description: "Import allowed"
              validity_end_date: null
              validity_start_date: "1972-01-01T00:00:00.000Z"

    ReferencedMeasureAction:
      description: A measure_action object referenced elsewhere.
      type: object
      properties:
        description:
          type: string
          description: The description for the measure action.
        validity_start_date:
          type: string
          description: The validity start date of the measure action.
          format: date-time
        validity_end_date:
          type: string
          description: The validity end date of the measure action.
          format: date-time
      example:
        description: "measure_action"
        validity_end_date: null
        validity_start_date: "1972-01-01T00:00:00.000Z"

    MeasureConditionCodes:
      description: List of measure condition codes
      type: object
      properties:
        data:id:
          type: string
          description: The unique `id` of the measure_condition_code.
        data:type:
          type: string
          description: the type of object (`measure_condition_code`)
        data:attributes:
          description: The measure_condition_code's attributes, as a [referenced measure_action object
  ](/reference.html#referencedmeasureconditioncode "see referenced_condition_code object")
          $ref: '#/components/schemas/ReferencedMeasureConditionCode'
      example:
        data:
          - id: "1"
            type: measure_condition_code
            attributes:
              description: "Presentation of a certificate/licence/document"
              validity_end_date: null
              validity_start_date: "1993-01-01T00:00:00.000Z"

    ReferencedMeasureConditionCode:
      description: A measure_condition_code object referenced elsewhere.
      type: object
      properties:
        description:
          type: string
          description: The description for the measure condition code.
        validity_start_date:
          type: string
          description: The validity start date of the measure condition code.
          format: date-time
        validity_end_date:
          type: string
          description: The validity end date of the measure condition code.
          format: date-time
      example:
        description: "Presentation of a certificate/licence/document"
        validity_end_date: null
        validity_start_date: "1993-01-01T00:00:00.000Z"

    FootnoteSearch:
      description: |
        Search for footnotes with parameters
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the footnote. It may be used to uniquely identify a footnote. For footnotes, this value is `attributes:code`.
        data:type:
          type: string
          description: the type of object this is, e.g. `footnote`
        data:attributes:
          description: The footnote's attributes, as a [referenced footnote object
  ](/reference.html#referencedfootnote "see referenced footnote object")
          $ref: '#/components/schemas/ReferencedFootnote'
        data:relationships:
          type: object
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this footnote. May include parent objects.
        included:
          type: array
          description: Zero, one or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and [referenced measure objects
  ](/reference.html#referencedmeasure "see referenced measure object") that are related to this footnote. May include parent objects.
          items:
            type: object
        meta:pagination:
          type: object
          description: Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
          items:
            type: integer
      example:
        data:
          id: "05737"
          type: footnote
          attributes:
            code: "05737"
            footnote_type_id: "05"
            footnote_id: "737"
            description: "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol"
            formatted_description: "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol"
            extra_large_measures: false
          relationships:
            goods_nomenclatures:
              data:
              - id: "34659"
                type: goods_nomenclature
            measures:
              data:
              - id: "3216444"
                type: measure
        included:
        - id: "3216444"
          type: measure
          attributes:
            id: "3216444"
            validity_start_date: "2011-11-01T00:00:00.000Z"
            validity_end_date: null
            "goods_nomenclature_item_id": "2204101900"
          relationships:
            goods_nomenclature:
              data:
                id: "34659"
                type: goods_nomenclature
        - id: "34659"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "2204101900"
            goods_nomenclature_sid: 34658
            description: "Other"
            number_indents: 3
            productline_suffix: "80"
        meta:
          pagination:
            page: 1
            per_page: 5
            total_count: 1

    FootnoteTypes:
      description: |
        List of footnote_types
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the footnote_type. It may be used to uniquely identify an footnote_type.
        data:type:
          type: string
          description: the type of object this is, e.g. `footnote_type`
        data:attributes:
          description: The footnote_type's attributes, as a [referenced footnote_type object
  ](/reference.html#referencedfootnote_type "see referenced footnote_type object")
          $ref: '#/components/schemas/ReferencedFootnoteType'
      example:
        data:
          - id: "WR"
            type: footnote_type
            attributes:
              footnote_type_id: "WR"
              description: "Wine reference"
          - id: "TP"
            type: footnote_type
            attributes:
              footnote_type_id: "TP"
              description: "Dynamic footnote"

    Chemical:
      description: |
        A Chemical is related to a GoodsNomenclature. A Chemical is, or is a part of, a GoodsNomencalture.

        A Chemical is usually related to one GoodsNomenclature, and usually has one ChemicalName.
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the chemical. It may be used to uniquely identify a chemical.
        data:type:
          type: string
          description: The type of object this is, e.g. `chemical`
        data:attributes:
          description: The chemical's attributes, as a [referenced chemical object
  ](/reference.html#referencedchemical "see referenced chemical object")
          $ref: '#/components/schemas/ReferencedChemical'
        data:relationships:
          type: object
          description: One or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and one or many [referenced chemical name objects
  ](/reference.html#referencedchemicalname "see referenced chemical name object") that are related to this chemical.
        data:links:uri:
          type: string
          description: a URI for this resource on the Trade Tariff API
        included:
          type: array
          description: One or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and one or many [referenced chemical name objects
  ](/reference.html#referencedchemicalname "see referenced chemical name object") that are related to this chemical.
          items:
            type: object
      example:
        data:
          id: "1"
          type: chemical
          attributes:
            id: 1
            cas: 22199-08-2
            name: 4-amino-N-(pyrimidin-2(1H)-ylidene-κN 1)benzenesulfonamidato-κOsilver
          relationships:
            goods_nomeclatures:
              data:
              - id: "36102"
                type: "goods_nomenclature"
            chemical_names:
              data:
              - id: "1"
                type: "chemical_name"
          links:
            uri: /chemicals/22199-08-2
        included:
        - id: 1
          type: chemical_name
          attributes:
            name: 4-amino-N-(pyrimidin-2(1H)-ylidene-κN 1)benzenesulfonamidato-κOsilver
            chemical_id: 1
        - id: "36102"
          type: goods_nomeclature
          attributes:
            goods_nomenclature_item_id: "2843290000"
            goods_nomenclature_sid: 36102
            description: Other
            number_indents: 2
            productline_suffix: "80"
            href: /api/v2/commodities/2843290000

    ChemicalSearch:
      description: |
        Search for chemicals with parameters
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the chemical. It may be used to uniquely identify a chemical.
        data:type:
          type: string
          description: the type of object this is, e.g. `chemical`
        data:attributes:
          description: The chemical's attributes, as a [referenced chemical object
  ](/reference.html#referencedchemical "see referenced chemical object")
          $ref: '#/components/schemas/ReferencedChemical'
        data:relationships:
          type: object
          description: One or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and one or many [referenced chemical name objects
  ](/reference.html#referencedchemicalname "see referenced chemical name object") that are related to this chemical.
        included:
          type: array
          description: One or many [referenced goods_nomenclature objects
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"), and one or many [referenced chemical name objects
  ](/reference.html#referencedchemicalname "see referenced chemical name object") that are related to this chemical.
          items:
            type: object
        meta:pagination:
          type: object
          description: Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
          items:
            type: integer
      example:
        data:
        - id: "1"
          type: chemical
          attributes:
            id: 1,
            cas: "22199-08-2"
            name: "4-amino-N-(pyrimidin-2(1H)-ylidene-κN 1)benzenesulfonamidato-κOsilver"
          relationships:
            goods_nomenclatures:
              data:
              - id: "36102"
                type: goods_nomenclature
            chemical_names:
              data:
              - id: "1"
                type: chemical_name
        - id: "8"
          type: chemical
          attributes:
            id: 8,
            cas: "42074-68-0"
            name: "1-chloro-2-(chlorodiphenylmethyl)benzene"
          relationships:
            goods_nomenclatures:
              data:
              - id: "101256"
                type: goods_nomenclature
            chemical_names:
              data:
              - id: "8"
                type: chemical_name
        - id: "11"
          type: chemical
          attributes:
            id: "11"
            cas: "4714-32-3"
            name: "1-nitro-4-(1,2,2,2-tetrachloroethyl)benzene"
          relationships:
            goods_nomenclatures:
              data:
              - id: "101275"
                type: goods_nomenclature
            chemical_names:
              data:
              - id: "11"
                type: chemical_name
        included:
        - id: "1"
          type: "chemical_name"
          attributes:
            name: "4-amino-N-(pyrimidin-2(1H)-ylidene-κN 1)benzenesulfonamidato-κOsilver"
            chemical_id: 1
        - id: "36102"
          type: "goods_nomenclature"
          attributes:
            goods_nomenclature_item_id: "2843290000"
            goods_nomenclature_sid: 36102
            description: "Other"
            number_indents: 2
            productline_suffix: "80"
            href: "/api/v2/commodities/2843290000"
        - id: "8"
          type: "chemical_name"
          attributes:
            name: "1-chloro-2-(chlorodiphenylmethyl)benzene"
            chemical_id: 8
        - id: "101256"
          type: "goods_nomenclature"
          attributes:
            goods_nomenclature_item_id: "2903998000"
            goods_nomenclature_sid: 101256
            description: "Other"
            number_indents: 3
            productline_suffix: "80"
            href: "/api/v2/commodities/2903998000"
        - id: "11"
          type: "chemical_name"
          attributes:
            name: "1-nitro-4-(1,2,2,2-tetrachloroethyl)benzene"
            chemical_id: 11
        - id: "101275"
          type: "goods_nomenclature"
          attributes:
            goods_nomenclature_item_id: "2904990000"
            goods_nomenclature_sid: 101275
            description: "Other"
            number_indents: 2
            productline_suffix: "80"
            href: "/api/v2/commodities/2904990000"
        meta:
          pagination:
            page: 1
            per_page: 20
            total_count: 54

    GoodsNomenclatures:
      description: |
      type: object
      properties:
        data:id:
          type: string
          description: the unique `id` of the goods_nomenclature
        data:type:
          type: string
          description: the type of object this is, e.g. `goods_nomenclature`
        data:attributes:
          description: The goods_nomeclature's attributes, as a [referenced goods_nomenclature object
  ](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object")
          $ref: '#/components/schemas/ReferencedGoodsNomenclature'
      example:
        data:
        - id: "27623"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "0100000000"
            goods_nomenclature_sid: 27623
            description: LIVE ANIMALS
            number_indents: 0
            productline_suffix: "80"
            href: /api/v2/chapters/01
        - id: "27810"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "0101000000"
            goods_nomenclature_sid: 27624
            description: Live horses, asses, mules and hinnies
            number_indents: 0
            productline_suffix: "80"
            href: /api/v2/headings/0101
        - id: "93797"
          type: goods_nomenclature
          attributes:
            goods_nomenclature_item_id: "0101210000"
            goods_nomenclature_sid: 93797
            description: Horses
            number_indents: 0
            productline_suffix: "80"
            href: /api/v2/commodities/0101210000

    SearchReferences:
      description: |
      type: object
      properties:
        data:id:
          type: string
          description: the unique `id` of the search_reference
        data:type:
          type: string
          description: the type of object this is, e.g. `search_reference`
        data:attributes:
          description: The search_reference's attributes, as a [referenced search_reference object
  ](/reference.html#referencedsearchreference "see referenced search_reference object")
          $ref: '#/components/schemas/ReferencedSearchReference'
      example:
        data:
          - id: "888"
            type: search_reference
            attributes:
              title: "cabinets, filing of base metal"
              referenced_id: "8304"
              referenced_class: "Heading"
          - id: "886"
            type: search_reference
            attributes:
              title: "cabinets (furniture)"
              referenced_id: "9403"
              referenced_class: "Heading"
          - id: "887"
            type: search_reference
            attributes:
              title: "cabinets (radio and television)"
              referenced_id: "8529"
              referenced_class: "Heading"

    GeographicalAreas:
      description: |
        Geographical areas.

        A geographical area has a specific code (the `geographical_area_id`), which is unique.
      type: object
      properties:
        data:id:
          type: string
          description: The `id` of the geographical area. It may be used to uniquely identify a geographical area.
        data:type:
          type: string
          description: the type of object this is, e.g. `geographical_area`
        data:attributes:
          description: The geographical area's attributes, as a [referenced geographical area object
  ](/reference.html#referencedgeographicalarea "see referenced geographical area object")
          $ref: '#/components/schemas/ReferencedGeographicalArea'
        data:relationships:
          type: object
          description: Zero, one or many [referenced geographical area
  ](/reference.html#referencedgeographicalarea "see referenced geographical area object") objects.
        included:
          type: array
          description: Zero, one or many [referenced geographical area objects
  ](/reference.html#referencedgeographicalarea "see referenced geographical area object").
          items:
            type: object
            # $ref: '#/components/schemas/ReferencedGeographicalArea'
      example:
        data:
        - id: "GB"
          type: geographical_area
          attributes:
            id: "GB"
            description: "United Kingdom"
            geographical_area_id: "GB"
          relationships:
            children_geographical_areas:
              data: []
        - id: "2501"
          type: geographical_area
          attributes:
            id: "2501"
            description: "Countries not members of the WTO"
            geographical_area_id: "2501"
          relationships:
            children_geographical_areas:
              data:
              - id: "AD"
                type: geographical_area
              - id: "AI"
                type: geographical_area
        included:
        - id: "AD"
          type: geographical_area
          attributes:
            id: "AD"
            description: "Andorra"
            geographical_area_id: "AD"
          relationships:
            children_geographical_areas:
              data: []

    ReferencedSection:
      description:
        A section object referenced elsewhere.
      type: object
      properties:
        id:
          type: integer
          description: The `id` of the section. It may be used to uniquely identify a section and request it's section_note from the API.
        title:
          type: string
          description: The `title` of the section.
        numeral:
          type: string
          description: The `numeral` of the section, as a roman numeral
        position:
          type: integer
          description: The `position` of the section, or the order in which this section appears in the tariff. It may be used to uniquely identify a section and request it from the API.
        chapter_from:
          type: string
          description: The `chapter_from` of the section, the first chapter of this section.
        chapter_to:
          type: string
          description: The `chapter_to` of the section, the first chapter of this section.
        section_note_id:
          type: integer
          description: The `section_note_id` of the section. Not all sections have a note.
          x-nullable: true
        section_note:
          type: string
          description: The `section_note_id` of the section. Not all sections have a note.
          x-nullable: true
      example:
        id: 1
        title: Live animals; animal products
        numeral: I
        position: 1
        chapter_from: "01"
        chapter_to: "05"
        section_note_id: 1
        section_note: "* 1\\. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n* 2\\. Except where the context otherwise requires, throughout the nomenclature any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"

    ReferencedChapter:
      description:
        A chapter object referenced elsewhere.
      type: object
      # required:
      # - goods_nomenclature_item_id
      # - description
      # - formatted_description
      # - guides
      # - chapter_note
      properties:
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_sid` of the chapter. This is a unique identifier.
        goods_nomenclature_sid:
          type: integer
          description: The `goods_nomenclature_sid` of the chapter. This is a unique identifier.
        description:
          type: string
          description: The `description` of the chapter.
        formatted_description:
          type: string
          description: The `formatted_description` of the chapter.
          x-nullable: true
        headings_from:
          type: string
          description: The `headings_from` of the chapter, or the first heading in this chapter
        headings_to:
          type: string
          description: The `headings_to` of the chapter, or the last heading in this chapter
        chapter_note:
          type: string
          description: The `chapter_note` of the chapter. Not all chapters have a note.
        chapter_note_id:
          type: integer
          description: The `chapter_note_id` of the chapter. This is a unique identifier for a chapter_note.
        section_id:
          type: integer
          description: The `section_id` of the section containing this chapter.
      example:
        goods_nomenclature_item_id: '0100000000'
        description: LIVE ANIMALS
        formatted_description: Live animals
        headings_from: "0101"
        headings_to: "0106"
        chapter_note_id: 46
        chapter_note: "* 1\\. This chapter covers all live animals except:\r\n
          \ * (a) fish and crustaceans, molluscs and other aquatic invertebrates,
          of heading 0301,
  0306,
  0307 or 0308;\r\n  * (b) cultures of micro-organisms
          and other products of heading 3002; and\r\n  * (c) animals of heading
          9508."
        section_id: 1

    ReferencedHeading:
      description:
        A heading object referenced elsewhere.
      type: object
      properties:
        goods_nomenclature_sid:
          type: integer
          description: The `goods_nomenclature_sid` of the heading. This is a unique identifier.
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_item_id` of the heading. This is a unique identifier.
        declarable:
          type: boolean
          description: Whether this heading is `declarable`.
        description:
          type: string
          description: The text `description` of the heading.
        producline_suffix:
          type: string
          description: The `producline_suffix` of the heading.
        leaf:
          type: boolean
          description: Whether this heading is a `leaf`.
        description_plain:
          type: string
          description: The `description_plain` of the heading.
        formatted_description:
          type: string
          description: The `formatted_description` of the heading, which may be suitable for presentation to the end user.
        bti_url:
          type: string
          description: a URL for more information about this heading
      example:
        goods_nomenclature_item_id: '0201000000'
        description: Meat of bovine animals, fresh or chilled
        bti_url: "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0201000000&Expand=true"
        formatted_description: Meat of bovine animals, fresh or chilled

    ReferencedHeadingCommodity:
      description: |
        A commodity object referenced in a heading object.
      type: object
      properties:
        description:
          type: string
          description: The `description` of the commodity.
        description_plain:
          type: string
          description: The `description_plain` of the commodity.
        formatted_description:
          type: string
          description: The `formatted_description` of the commodity, which may be suitable for presentation to the end user.
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_item_id` of the commodity.
        number_indents:
          type: integer
          description: The `number_indents` of the commodity.
        producline_suffix:
          type: string
          description: The `producline_suffix` of the commodity.
        leaf:
          type: boolean
          description: Whether this commodity is a `leaf`.
        goods_nomenclature_sid:
          type: integer
          description: The `goods_nomenclature_sid` of the commodity. This is a unique identifier.
        parent_sid:
          type: string
          description: The `parent_sid` of the commodity.
          x-nullable: true
      example:
        description: "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)"
        number_indents: 2
        goods_nomenclature_item_id: "0304320000"
        leaf: false
        goods_nomenclature_sid: 94959
        formatted_description: "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)"
        description_plain: "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)"
        producline_suffix: "80"
        parent_sid: 94957

    ReferencedCommodity:
      description: |
        A commodity object referenced elsewhere.
      type: object
      properties:
        basic_duty_rate:
          type: string
          description: Formatted duty expression of the commodity.
        bti_url:
          type: string
          description: a URL for more information about this commodity.
        consigned:
          type: boolean
          description: Whether this commodity is `consigned`.
        consigned_from:
          type: string
          description: Consigned from.
          x-nullable: true
        declarable:
          type: boolean
          description: Whether this commodity is `declarable`.
        description:
          type: string
          description: The `description` of the commodity.
        description_plain:
          type: string
          description: The `description_plain` of the commodity.
        formatted_description:
          type: string
          description: The `formatted_description` of the commodity, which may be suitable for presentation to the end user.
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_item_id` of the commodity.
        meursing_code:
          type: boolean
          description: Whether this commodity is `meursing_code`.
        number_indents:
          type: integer
          description: The `number_indents` of the commodity.
        producline_suffix:
          type: string
          description: The `producline_suffix` of the commodity.
      example:
        producline_suffix: "80"
        description: "Pure-bred breeding animals"
        number_indents: 2
        goods_nomenclature_item_id: "0101210000"
        bti_url: "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en\u0026nomenc=0101210000\u0026Expand=true"
        formatted_description: "Pure-bred breeding animals"
        description_plain: "Pure-bred breeding animals"
        consigned: false
        consigned_from: null
        basic_duty_rate: "\u003cspan title='0.0 '\u003e0.00\u003c/span\u003e %"
        meursing_code: false
        declarable: true

    ReferencedMeasure:
      description: |
        A measure object referenced elsewhere.
      type: object
      properties:
        id:
          type: string
          description: The `id` of the measure.
        origin:
          type: string
          description: The `origin` of the measure.
        effective_start_date:
          type: string
          description: The `effective_start_date` of the measure.
        effective_end_date:
          type: string
          description: The `effective_end_date` of the measure.
        import:
          type: boolean
          description: The `import` flag of the measure.
        excise:
          type: boolean
          description: The `excise` flag of the measure.
        vat:
          type: boolean
          description: The `vat` flag of the measure.
        reduction_indicator:
          type: integer
          description: The reduction indicator is used to match a preferential duty with a Meursing additional code duty. Can be an integer or null.
      example:
        id: 2982263
        origin: eu
        effective_start_date: 2008-01-01T00: 00: 00.000Z
        effective_end_date: null
        import: true
        excise: false
        vat: false
        reduction_indicator: null

    ReferencedAdditionalCode:
      description: |
        An additional_code object referenced elsewhere.
      type: object
      properties:
        additional_code_type_id:
          type: string
          description: The `additional_code_type_id` for the additional_code.
        additional_code:
          type: string
          description: The `additional_code` for the additional_code.
        code:
          type: string
          description: The `code` for the additional_code. Equal to `additional_code_type_id + additional_code`
        description:
          type: string
          description: The `description` for the additional_code.
        formatted_description:
          type: string
          description: The `formatted_description` for the additional_code.
      example:
          additional_code_type_id: "C"
          additional_code: "371"
          code: "C371"
          description: "Shanghai Huayi Group Corp. Ltd Double Coin Group (Jiang Su) Tyre Co., Ltd"
          formatted_description: "Shanghai Huayi Group Corp. Ltd Double Coin Group (Jiang Su) Tyre Co., Ltd"

    ReferencedAdditionalCodeType:
      description: An additional_code_type object referenced elsewhere.
      type: object
      properties:
        additional_code_type_id:
          type: string
          description: The `additional_code_type_id` for the additional_code_type.
        description:
          type: string
          description: The `description` for the additional_code_type.
      example:
        additional_code_type_id: "B"
        description: "Refund for basic products"

    ReferencedCertificate:
      description: |
        A certificate object referenced elsewhere.
      type: object
      properties:
        certificate_type_code:
          type: string
          description: The `certificate_type_code` for the certificate.
        certificate_code:
          type: string
          description: The `certificate_code` for the certificate.
        description:
          type: string
          description: The `description` for the certificate.
      example:
        certificate_type_code: "D"
        certificate_code: "005"
        description: "Commercial invoice within the framework of undertakings"

    ReferencedCertificateType:
      description: An certificate_type object referenced elsewhere.
      type: object
      properties:
        additional_code_type_id:
          type: string
          description: The `certificate_type_code` for the certificate_type.
        description:
          type: string
          description: The `description` for the certificate_type.
      example:
        certificate_type_code: "X"
        description: "Export licence"

    ReferencedFootnote:
      description: |
        A footnote object referenced elsewhere.
      type: object
      properties:
        code:
          type: string
          description: The `code` for the footnote.
        description:
          type: string
          description: The `description` for the footnote.
        formatted_description:
          type: string
          description: The `formatted_description` for the footnote.
      example:
          code: TN701
          description: "According to  the Council Regulation (EU) No 692/2014
            (OJ L183, p. 9) it shall be prohibited to import into European Union
            goods originating in Crimea or Sevastopol.\n..."
          formatted_description: 'According to  the Council Regulation (EU)
            No 692/2014 (OJ L183, p. 9) it shall be prohibited to import into
            European Union goods originating in Crimea or Sevastopol.<br/>...'

    ReferencedFootnoteType:
      description: An footnote_type object referenced elsewhere.
      type: object
      properties:
        additional_code_type_id:
          type: string
          description: The `footnote_type_id` for the footnote_type.
        description:
          type: string
          description: The `description` for the footnote_type.
      example:
        footnote_type_id: "WR"
        description: "Wine reference"

    ReferencedChemical:
      description: |
        A chemical object referenced elsewhere.
      type: object
      properties:
        id:
          type: integer
          description: The `id` of the chemical.
        cas:
          type: string
          description: The CAS number of the chemical. See [https: //www.cas.org/support/documentation/chemical-substances](https://www.cas.org/support/documentation/chemical-substances)
        name:
          type: string
          description: The `name` of the chemical. A chemical may be known by more than one name, including names not in this database.
      example:
        id: 1
        cas: "22199-08-2"
        name: "4-amino-N-(pyrimidin-2(1H)-ylidene-κN)"

    ReferencedChemicalName:
      description: |
        A chemical name object referenced elsewhere.
      type: object
      properties:
        name:
          type: string
          description: The `name` of the related chemical. A chemical may be known by more than one name, including names not in this database.
        chemical_id:
          type: string
          description: The `id` of the chemical related to this name.
      example:
        name: "4-amino-N-(pyrimidin-2(1H)-ylidene-κN)"
        chemical_id: 1

    ReferencedGuide:
      description: |
        A guide object referenced elsewhere.
      type: object
      properties:
        title:
          type: string
          description: The `title` for the guide.
        url:
          type: string
          description: The `url` for the guide.
      example:
        title: Classification of goods
        url: https: //www.gov.uk/government/collections/classification-of-goods

    ReferencedGeographicalArea:
      description: A geographical_area object referenced elsewhere.
      type: object
      properties:
        id:
          type: string
          description: The `id` of the geographical area.
        description:
          type: string
          description: The `type` of the geographical area.
        geographical_area_id:
          type: string
          description: The `geographical_area_id` of the geographical area.

      example:
        id: "1011"
        description: ERGA OMNES
        geographical_area_id: "1011"

    ReferencedDefinition:
      description: A definition object referenced elsewhere.
      type: object
      properties:
        quota_definition_sid:
          type: integer
          description: The `quota_definition_sid` of the definition. This is a unique identifier
        quota_order_number_id:
          type: string
          description: The `quota_order_number_id` of the definition.
        initial_volume:
          type: string
          description: The `initial_volume` of the definition.
        validity_start_date:
          type: string
          description: The `validity_start_date` of the definition.
          format: date-time
        validity_end_date:
          type: string
          description: The `validity_end_date` of the definition.
          format: date-time
        status:
          type: string
          description: The `status` of the definition.
        description:
          type: string
          description: The `description` of the definition.
        balance:
          type: string
          description: The `balance` of the definition.
        measurement_unit:
          type: string
          description: The `measurement_unit` of the definition.
        monetary_unit:
          type: string
          description: The `monetary_unit` of the definition.
        measurement_unit_qualifier:
          type: string
          description: The `measurement_unit_qualifier` of the definition.
        last_allocation_date:
          type: string
          description: The `last_allocation_date` of the definition.
        suspension_period_start_date:
          type: string
          description: The `suspension_period_start_date` of the definition.
        suspension_period_end_date:
          type: string
          description: The `suspension_period_end_date` of the definition.
        blocking_period_start_date:
          type: string
          description: The `blocking_period_start_date` of the definition.
        blocking_period_end_date:
          type: string
          description: The `blocking_period_end_date` of the definition.
      example:
        quota_definition_sid: 12202
        quota_order_number_id: "091784"
        initial_volume: "36300000.0"
        validity_start_date: "2018-12-01T00:00:00.000Z"
        validity_end_date: "2019-05-31T00:00:00.000Z"
        status: "Open"
        description: "Commission Regulation (EU) No 449/2010 amending Council Regulation (EC) No 747/2001 and repealing Regulations (EC) No 2276/2003 (EC) No 995/2005 (EC) No 1002/2007 and (EC) No 1455/2007"
        balance: "36300000.0"
        measurement_unit: "Kilogram (kg)"
        monetary_unit: null
        measurement_unit_qualifier: null
        last_allocation_date: null
        suspension_period_start_date: null
        suspension_period_end_date: null
        blocking_period_start_date: null
        blocking_period_end_date: null

    ReferencedGoodsNomenclature:
      description: A goods_nomenclature object referenced elsewhere.
      type: object
      properties:
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_item_id` of the goods nomenclature.
        goods_nomenclature_sid:
          type: integer
          description: The `goods_nomenclature_sid` of the goods nomenclature. This is a unique identifier.
        description:
          type: string
          description: The `description` of the goods nomenclature.
        number_indents:
          type: integer
          description: The `number_indents` of the goods nomenclature.
        productline_suffix:
          type: string
          description: The `productline_suffix` of the goods nomenclature.
        href:
          type: string
          description: The `href` of the goods nomenclature.
      example:
        goods_nomenclature_item_id: "0201000000"
        goods_nomenclature_sid: 27810
        description: Meat of bovine animals, fresh or chilled
        number_indents: 0
        productline_suffix: "80"
        href: /api/v2/headings/0201

    ReferencedSearchReference:
      description: A search_reference object referenced elsewhere.
      type: object
      properties:
        title:
          type: string
          description: The `title` of referenced object.
        referenced_id:
          type: string
          description: The `id` of the referenced object.
        referenced_class:
          type: string
          description: The `type` of the referenced object.
      example:
        title: "cabinets, filing of base metal"
        referenced_id: "8304"
        referenced_class: "Heading"

    Change:
      description: Indicates a change to a given goods nomenclature.
      type: object
      properties:
        id:
          type: integer
          description: The `goods_nomenclature_sid` of the goods nomenclature. This is a unique identifier.
        type:
          type: string
          description: Always 'change'.
        attributes:
          type: object
          description: The changed goods nomenclature attributes.
          $ref: '#/components/schemas/ChangeAttributes'
      example:
        id: "106193"
        type: "change"
        attributes:
          goods_nomenclature_sid: "106193"
          goods_nomenclature_item_id: "7606129292"
          productline_suffix: "10"
          end_line: false
          change_type: "commodity"
          change_date: "2021-04-13"

    ChangeAttributes:
      type: object
      description: The changed goods nomenclature attributes
      properties:
        goods_nomenclature_sid:
          type: integer
          description: The `goods_nomenclature_sid` of the goods nomenclature. This is a unique identifier.
        goods_nomenclature_item_id:
          type: string
          description: The `goods_nomenclature_item_id` of the goods nomenclature.
        productline_suffix:
          type: string
          description: The `producline_suffix` of the commodity.
        end_line:
          type: boolean
          description: If the goods nomenclature is an end line commodity
        change_type:
          type: string
          description: Type of change. It can be one of [commodity, measure
    ]
        change_date:
          type: string
          description: Date of the change.
          format: date
      example:
        goods_nomenclature_sid: "106193"
        goods_nomenclature_item_id: "7606129292"
        productline_suffix: "10"
        end_line: false
        change_type: "commodity"
        change_date: "2021-04-13"

    RulesOfOriginScheme:
      type: object
      description: A scheme of lower or preferential tariffs
      properties:
        scheme_code:
          type: string
          description: A code used to represent the scheme
        title:
          type: string
          description: The title of the scheme
        countries:
          type: array
          description: A list of 2 letter country codes which the scheme applies to
          items:
            type: string
        footnote:
          type: string
          description: A footnote of further information relating to the scheme
        unilateral:
          type: boolean
          description: Is the scheme unilateral or multilateral
        fta_intro:
          type: string
          description: Free trade agreement introductory text, in markdown format
        introductory_notes:
          type: string
          description: Introductory notes for the scheme, in markdown format
        rules:
          type: array
          description: A collection of [product-specific rules
    ](#rulesoforiginrule) a product must fulfil
          items:
            $ref: '#/components/schemas/RulesOfOriginRule'
        links:
          type: array
          description: A collection of [links
    ](#rulesoforiginlink) with further information relating to the scheme
          items:
            $ref: '#/components/schemas/RulesOfOriginLink'
        proofs:
          type: array
          description: A collection of [proofs of origin
    ](#rulesoforiginproof) necessary to claim preferential tariff treatment
          items:
            $ref: '#/components/schemas/RulesOfOriginProof'
      example:
        data:
        - id: eu
          type: rules_of_origin_scheme
          attributes:
            scheme_code: eu
            title: UK / EU Trade and Co-operation Agreement
            countries:
            - EU
            - AT
            - BE
            - BG
            - CY
            - CZ
            - DE
            - DK
            - EE
            - ES
            - FI
            - FR
            - GR
            - HR
            - HU
            - IE
            - IT
            - LT
            - LU
            - LV
            - MT
            - NL
            - PL
            - PT
            - RO
            - SE
            - SI
            - SK
            - SM
            - AD
            footnote:
            unilateral:
            fta_intro: |-
              ### UK / EU Trade and Co-operation Agreement

              The UK moved to trading based on a new Free Trade Agreement (FTA) - the Trade and Cooperation Agreement (TCA) between the UK and the EU.

              To import / export tariff-free under the TCA, goods must meet the UK-EU preferential rules of origin. This means that there must be a qualifying level of processing in the country of export to access zero tariffs. This applies to EU origin goods imported and moving through the UK from a Member State to another EU Member State, as well as goods imported from the Rest of World.

              These rules are set out in the TCA and determine the origin of goods based on where the products or materials (or inputs) used in their production come from. Their purpose is to ensure that preferential tariffs are only given to goods that originate in the UK or EU and not from third countries (those apart from UK and the EU Member States).

              #### Andorra and San Marino
              Andorra and San Marino are part of customs unions with the EU. The UK has agreed with the EU that all products originating in San Marino and all non-agricultural products (chapters 25-97) originating in Andorra are to be treated as originating in the EU under the UK-EU Trade and Cooperation Agreement as long as Andorra and San Marino apply to UK products the same preferences that the EU applies to them. These products benefit from zero tariffs, where they meet the relevant rules of origin. Trade with Andorra of agricultural products (chapters 01-24) is not in scope of the UK-EU Trade and Cooperation Agreement and takes place under WTO terms.
            introductory_notes: "### Note 1 - General principles\n\n1. This Annex sets out
              the general rules for the applicable requirements of Annex ORIG-2 \\[Product-specific
              rules of origin\\
    ] as provided for in point (c) of Article ORIG 3(1) \\[General
              requirements\\
    ] of this Agreement."
          relationships:
            rules:
              data:
              - id: '10000096'
                type: rules_of_origin_rule
            links:
              data:
              - id: fd431ebe2833f8753e90e93cbbe64ef4
                type: rules_of_origin_link
              - id: 71ce11df10c4c03e61ce0702f3802ce7
                type: rules_of_origin_link
            proofs:
              data:
              - id: 506eb2e258484e97bc25568b864c4fd0
                type: rules_of_origin_proof
              - id: 724fc25dcaf6a7d21e9015f065344a52
                type: rules_of_origin_proof
        included:
        - id: fd431ebe2833f8753e90e93cbbe64ef4
          type: rules_of_origin_link
          attributes:
            text: Check your goods meet the rules of origin
            url: https: //www.gov.uk/guidance/check-your-goods-meet-the-rules-of-origin
        - id: 71ce11df10c4c03e61ce0702f3802ce7
          type: rules_of_origin_link
          attributes:
            text: 'UK/EU and EAEC: Trade and Cooperation Agreement'
            url: https: //www.gov.uk/government/publications/ukeu-and-eaec-trade-and-cooperation-agreement-ts-no82021
        - id: 506eb2e258484e97bc25568b864c4fd0
          type: rules_of_origin_proof
          attributes:
            summary: Statement on origin
            subtext: ''
            url: https: //www.gov.uk/guidance/get-proof-of-origin-for-your-goods#origin-declaration
        - id: 724fc25dcaf6a7d21e9015f065344a52
          type: rules_of_origin_proof
          attributes:
            summary: Importer's knowledge
            subtext: ''
            url: https: //www.gov.uk/guidance/get-proof-of-origin-for-your-goods#importers-knowledge
        - id: '10000096'
          type: rules_of_origin_rule
          attributes:
            id_rule: 10000096
            heading: 39.21-39.22
            description: |-
              3921: Other plates, sheets, film, foil and strip, of plastics

              3922: Baths, shower-baths, wash-basins, bidets, lavatory pans, seats and covers, flushing cisterns and similar sanitary ware, of plastics
            rule: |-
              A change from any other heading  - CTH;
              or
              Maximum of non-originating materials - MaxNOM 50% (EXW).{
      {EXW
      }
    }{
      {CTH
      }
    }

    RulesOfOriginLink:
      type: object
      description: A URL link for further information relating to a RulesOfOriginScheme
      properties:
        text:
          type: string
          description: A description of the link
        url:
          type: string
          description: The url for the link
      example:
        text: "Check your goods meet the rules of origin"
        url: "https://www.gov.uk/guidance/check-your-goods-meet-the-rules-of-origin"

    RulesOfOriginProof:
      type: object
      description: |
        A proof of origin necessary to claim preferential tariff treatment
      properties:
        summary:
          type: string
          description: A summary description of the necessary proof of origin
        subtext:
          type: string
          description: Additional information relating to the necessary proof of origin
        url:
          type: string
          description: A URL linking to further information for the necessary proof of origin
      example:
        summary: "Statement on origin"
        subtext: ""
        url: "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#origin-declaration"

    RulesOfOriginRule:
      type: object
      description: |
        A product-specific rule the product must fulfil to be considered originating from the origin location
      properties:
        heading:
          type: string
          description: The heading this rule applies to
        description:
          type: string
          description: The description of the heading this rule applies to
        rule:
          type: string
          description: The product-specific rule to be fulfilled, in markdown format
      example:
        heading: "39.21-39.22"
        description: "3921: Other plates, sheets, film, foil and strip, of plastics\n\n3922: Baths, shower-baths, wash-basins, bidets, lavatory pans, seats and covers, flushing cisterns and similar sanitary ware, of plastics"
        rule: "A change from any other heading  - CTH;\nor\nMaximum of non-originating materials - MaxNOM 50% (EXW).{{EXW}}{{CTH}}"